@model SurfsUp.Models.Board

@{
    ViewData["Title"] = "Details";
}

@*<h1>Details</h1>*@


<div class="row detail-row mt-5">
    <div class="col-7">
        <img src="@Model.ImageURL" class="img-fluid" alt="Responsive image">
    </div>
    <div class="col-5">
        <h3>@Model.Name</h3>
        <p class="item-price">@Model.Price €</p>

        <h5 class="card-title">Product Specifications</h5>
        <h6 class="card-subtitle mb-2 text-muted">@Model.Type</h6>
        <table style="width:100%;">
            <tr>
                <td><b>Length</b></td>
                <td style="text-align:right;">@Model.Length</td>
            </tr>
            <tr>
                <td><b>Width</b></td>
                <td style="text-align:right;">@Model.Width</td>
            </tr>
            <tr>
                <td><b>Thickness</b></td>
                <td style="text-align:right;">@Model.Thickness</td>
            </tr>
            <tr>
                <td><b>Volume</b></td>
                <td style="text-align:right;">@Model.Volume</td>
            </tr>
            <tr>
                <td><b>Price</b></td>
                <td style="text-align:right;">@Model.Price</td>
            </tr>
            <tr>
                <td style="display:flex;align-content:start;"><b>Equipment(s)</b></td>
                @{
                    if (!String.IsNullOrEmpty(Model.Equipments))
                    {
                        <td style="text-align:right;">
                            @foreach (var items in Model.Equipments.Split(','))
                            {
                                <p style="margin:0;padding:0;">@items</p>
                            }
                        </td>
                    }
                    else
                    {
                        <td style="text-align:right;">None</td>
                    }
                }
            </tr>
        </table>
        @*    <p class="card-text"><b>Length:</b> @Model.Length</p>
        <p class="card-text"><b>Width:</b> @Model.Width</p>
        <p class="card-text"><b>Thickness:</b> @Model.Thickness</p>
        <p class="card-text"><b>Volume:</b> @Model.Volume</p>
        <p class="card-text"><b>Price:</b> @Model.Price</p>
        <p class="card-text"><b>Equipments:</b> @Model.Equipments</p>*@

        <ul class="details-btn-ul">
            <li class="nav-item detail-btn-li" style="width: 100%;text-align:center;">
                <a asp-action="RentOut" asp-route-id="@Model.Id" class="nav-link text-light bg-dark">Rent</a>
            </li>
            <li class="nav-item detail-btn-li" style="width: 100%;text-align:center;">
                <a asp-action="Index" class="nav-link text-light bg-dark">Back</a>
            </li>
        </ul>
    </div>
</div>
<div class="row mt-5 detail-row">
    <div class="col-4">
        <div class="card border-0">
            <div class="card-body">
                <h5 class="card-title">Product Specifications</h5>
                <h6 class="card-subtitle mb-2 text-muted">@Model.Type</h6>
                <p>
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
                </p>
                <a href="#" class="card-link text-dark">Lorem Link</a>
                <a href="#" class="card-link text-dark">Lorem ipsum Link</a>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card border-0">
            <div class="card-body">
                <h5 class="card-title">Brand</h5>
                <h6 class="card-subtitle mb-2 text-muted">@Model.Type</h6>
                <p>
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
                </p>
                <a href="#" class="card-link text-dark">Lorem Link</a>
                <a href="#" class="card-link text-dark">Lorem ipsum Link</a>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card border-0">
            <div class="card-body">
                <h5 class="card-title">About</h5>
                <h6 class="card-subtitle mb-2 text-muted">@Model.Type</h6>
                <p>
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
                </p>
                <a href="#" class="card-link text-dark">Lorem Link</a>
                <a href="#" class="card-link text-dark">Lorem ipsum Link</a>
            </div>
        </div>
    </div>
</div>
@*<div>*@
@*    <h4>Board</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Length)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Length)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Width)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Width)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Thickness)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Thickness)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Volume)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Volume)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
@*        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Equipments)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Equipments)
        </dd>*@
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageURL)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageURL)
        </dd>
    </dl>
</div>*@
<div>
</div>
