@page "/boardsuser/guestrentout/{BoardId:int}"
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
<PageTitle>View</PageTitle>

<h4>Rent</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Rent" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <p>@nameof(Rent.StartRent).ToString()</p>
            <InputDate id="name" @bind-Value="Rent.StartRent" />

            <p>@nameof(Rent.EndRent).ToString()</p>
            <InputDate id="name" @bind-Value="Rent.EndRent" />

            <p>@nameof(Rent.FirstName).ToString()</p>
            <InputText id="name" @bind-Value="Rent.FirstName" />

            <p>@nameof(Rent.LastName).ToString()</p>
            <InputText id="name" @bind-Value="Rent.LastName" />
            
            <p>@nameof(Rent.PhoneNumber).ToString()</p>
            <InputText id="name" @bind-Value="Rent.PhoneNumber" />

            <p></p>

            <button type="submit">Rent</button>
        </EditForm>

    </div>
    <div class="col-md-4">
        <FetchData SearchString="Odense" />
    </div>
</div>

@*@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }*@

@code {
    [Parameter]
    public int BoardId { get; set; }
    private Models.DTOs.GuestRentDto Rent { get; set; } = new();
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        Rent.BoardId = BoardId;
        Rent.StartRent = DateTime.Now;
        Rent.EndRent = Rent.StartRent.AddDays(7);
        StateHasChanged();
        base.OnInitialized();
    }

    private async Task HandleValidSubmit()
    {
        string request = $"v2/rent/";
        await Http.PostAsJsonAsync(request, Rent);
        Navigation.NavigateTo("/boardsuser");
    }
}
